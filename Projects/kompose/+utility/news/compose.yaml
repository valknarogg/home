# =================================================================
# LETTERPRESS/NEWS - Enhanced with Full Integration
# =================================================================
# Features:
# - SSO authentication via Keycloak
# - Redis session management and caching
# - MQTT article publishing events
# - Prometheus metrics
# - Email campaign tracking
# =================================================================

name: news

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_backend
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
      
      # Database Configuration
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@core-postgres:5432/${DB_NAME}?schema=public"
      
      # Authentication
      JWT_SECRET: ${JWT_SECRET}
      
      # Redis Integration
      REDIS_URL: redis://core-redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_SESSION_PREFIX: letterpress:session:
      REDIS_CACHE_TTL: 3600
      
      # Email Configuration (via Mailhog)
      EMAIL_TRANSPORT: ${EMAIL_TRANSPORT}
      EMAIL_FROM: ${EMAIL_FROM}
      SMTP_HOST: messaging_mailhog
      SMTP_PORT: 1025
      SMTP_USER: ${EMAIL_SMTP_USER}
      SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      
      # MQTT Event Publishing
      MQTT_ENABLED: ${MQTT_ENABLED:-true}
      MQTT_BROKER: core-mqtt
      MQTT_PORT: 1883
      MQTT_TOPIC_PREFIX: kompose/news
      
      # Metrics
      METRICS_ENABLED: true
      METRICS_PORT: 9090
      
    volumes:
      - ./metrics:/app/metrics
      
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${APP_PORT}/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    networks:
      - kompose_network
      
    labels:
      # Traefik Configuration
      - 'traefik.enable=true'
      
      # HTTP to HTTPS redirect
      - 'traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-redirect-web-secure.redirectscheme.scheme=https'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web.middlewares=${COMPOSE_PROJECT_NAME}-redirect-web-secure'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web.rule=Host(`${TRAEFIK_HOST}`)'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web.entrypoints=web'
      
      # HTTPS with SSO and Security
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web-secure.rule=Host(`${TRAEFIK_HOST}`)'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web-secure.tls.certresolver=resolver'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web-secure.entrypoints=web-secure'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-web-secure.middlewares=sso-secure'
      - 'traefik.http.services.${COMPOSE_PROJECT_NAME}-web-secure.loadbalancer.server.port=${APP_PORT}'
      - 'traefik.docker.network=${NETWORK_NAME:-kompose}'
      
      # Monitoring Labels
      - 'prometheus.scrape=true'
      - 'prometheus.port=9090'
      - 'prometheus.path=/metrics'

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
