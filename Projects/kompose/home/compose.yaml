name: ${HOME_COMPOSE_PROJECT_NAME}

services:
  # Home Assistant - Smart Home Hub
  homeassistant:
    image: ${HOME_HOMEASSISTANT_IMAGE:-ghcr.io/home-assistant/home-assistant:stable}
    container_name: ${HOME_COMPOSE_PROJECT_NAME}_homeassistant
    restart: unless-stopped
    privileged: true
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
    volumes:
      - homeassistant_config:/config
      - /etc/localtime:/etc/localtime:ro
      # Optional: USB device access for Zigbee/Z-Wave dongles
      # - /dev/ttyUSB0:/dev/ttyUSB0
      # - /dev/ttyACM0:/dev/ttyACM0
    devices:
      # Uncomment and adjust for your USB devices
      # - /dev/ttyUSB0:/dev/ttyUSB0
      # - /dev/ttyACM0:/dev/ttyACM0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - kompose_network
    ports:
      - "${HOME_HOMEASSISTANT_PORT:-8123}:8123"
    labels:
      # Traefik enabled/disabled per service
      - 'traefik.enable=${TRAEFIK_ENABLED_HOME:-false}'
      
      # HTTP to HTTPS redirect (only for production when PROTOCOL=https)
      - 'traefik.http.middlewares.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-redirect-web-secure.redirectscheme.scheme=${PROTOCOL}'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web.middlewares=${HOME_COMPOSE_PROJECT_NAME}-homeassistant-redirect-web-secure'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web.rule=Host(`${SUBDOMAIN_HOME}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web.entrypoints=web'
      
      # Secure configuration (HTTPS in production, HTTP in local)
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure.rule=Host(`${SUBDOMAIN_HOME}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure.tls.certresolver=${PROTOCOL:+resolver}'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure.tls=${PROTOCOL:+true}'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure.entrypoints=web-secure'
      
      # Compression middleware
      - 'traefik.http.middlewares.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure-compress.compress=true'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure.middlewares=${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure-compress'
      
      # Load balancer configuration
      - 'traefik.http.services.${HOME_COMPOSE_PROJECT_NAME}-homeassistant-web-secure.loadbalancer.server.port=8123'
      - 'traefik.docker.network=${NETWORK_NAME:-kompose}'
    depends_on:
      - matter-server

  # Matter Server - Matter Protocol Support
  matter-server:
    image: ${HOME_MATTER_SERVER_IMAGE:-ghcr.io/home-assistant-libs/python-matter-server:stable}
    container_name: ${HOME_COMPOSE_PROJECT_NAME}_matter
    restart: unless-stopped
    security_opt:
      - apparmor:unconfined
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
    volumes:
      - matter_data:/data
      - /run/dbus:/run/dbus:ro
    network_mode: host
    # Required for Matter commissioning and mDNS
    # Note: network_mode: host is required for Matter to work properly

  # MQTT Bridge - Connects to core MQTT (Mosquitto)
  # Note: Using external MQTT from core stack, no separate MQTT needed
  # MQTT connection details:
  # Host: core_mqtt (container name from core stack)
  # Port: 1883
  # Configure in Home Assistant MQTT integration

  # Zigbee2MQTT (Optional - enable if using Zigbee devices)
  zigbee2mqtt:
    image: ${HOME_ZIGBEE2MQTT_IMAGE:-koenkk/zigbee2mqtt:latest}
    container_name: ${HOME_COMPOSE_PROJECT_NAME}_zigbee2mqtt
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
    volumes:
      - zigbee2mqtt_data:/app/data
      - /run/udev:/run/udev:ro
    devices:
      # Uncomment and adjust for your Zigbee adapter
      # - /dev/ttyUSB0:/dev/ttyUSB0
    networks:
      - kompose_network
    ports:
      - "${HOME_ZIGBEE2MQTT_PORT:-8080}:8080"
    labels:
      # Traefik enabled/disabled per service
      - 'traefik.enable=${TRAEFIK_ENABLED_ZIGBEE:-false}'
      
      # HTTP to HTTPS redirect (only for production when PROTOCOL=https)
      - 'traefik.http.middlewares.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-redirect-web-secure.redirectscheme.scheme=${PROTOCOL}'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web.middlewares=${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-redirect-web-secure'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web.rule=Host(`${SUBDOMAIN_ZIGBEE}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web.entrypoints=web'
      
      # Secure configuration (HTTPS in production, HTTP in local)
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure.rule=Host(`${SUBDOMAIN_ZIGBEE}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure.tls.certresolver=${PROTOCOL:+resolver}'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure.tls=${PROTOCOL:+true}'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure.entrypoints=web-secure'
      
      # Compression middleware
      - 'traefik.http.middlewares.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure-compress.compress=true'
      - 'traefik.http.routers.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure.middlewares=${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure-compress'
      
      # Load balancer configuration
      - 'traefik.http.services.${HOME_COMPOSE_PROJECT_NAME}-zigbee2mqtt-web-secure.loadbalancer.server.port=8080'
      - 'traefik.http.docker.network=${NETWORK_NAME:-kompose}'
    profiles:
      - zigbee

  # ESPHome (Optional - for ESP8266/ESP32 devices)
  esphome:
    image: ${HOME_ESPHOME_IMAGE:-ghcr.io/esphome/esphome:stable}
    container_name: ${HOME_COMPOSE_PROJECT_NAME}_esphome
    restart: unless-stopped
    privileged: true
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
    volumes:
      - esphome_config:/config
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    profiles:
      - esphome

volumes:
  homeassistant_config:
    name: ${HOME_COMPOSE_PROJECT_NAME}_homeassistant_config
  matter_data:
    name: ${HOME_COMPOSE_PROJECT_NAME}_matter_data
  zigbee2mqtt_data:
    name: ${HOME_COMPOSE_PROJECT_NAME}_zigbee2mqtt_data
  esphome_config:
    name: ${HOME_COMPOSE_PROJECT_NAME}_esphome_config

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
