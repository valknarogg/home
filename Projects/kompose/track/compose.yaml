# =================================================================
# UMAMI - Enhanced with Full Integration
# =================================================================
# Features:
# - SSO authentication via Keycloak
# - Redis query caching
# - MQTT real-time analytics events
# - Cross-service tracking
# - Custom metrics export
# =================================================================

name: ${TRACK_COMPOSE_PROJECT_NAME}

services:
  umami:
    image: ${TRACK_DOCKER_IMAGE}
    container_name: ${TRACK_COMPOSE_PROJECT_NAME}_app
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
      
      # Database Configuration
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${CORE_DB_HOST}:${CORE_DB_PORT}/${TRACK_DB_NAME}
      DATABASE_TYPE: postgresql
      
      # Application Secret
      APP_SECRET: ${TRACK_APP_SECRET}
      
      # Redis Cache Integration
      REDIS_URL: redis://${CORE_REDIS_HOST}:${CORE_REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      CACHE_ENABLED: true
      
      # MQTT Real-time Events
      MQTT_ENABLED: ${MQTT_ENABLED:-true}
      MQTT_BROKER: ${TRACK_COMPOSE_PROJECT_NAME}_mqtt
      MQTT_PORT: ${CORE_MQTT_PORT}
      MQTT_TOPIC_PREFIX: kompose/analytics
      MQTT_PUBLISH_PAGEVIEWS: true
      MQTT_PUBLISH_EVENTS: true
      
      # Tracking Integration URLs
      TRACKER_SCRIPT_NAME: kompose-tracker
      CORS_MAX_AGE: 86400
      
      # Features
      DISABLE_TELEMETRY: true
      REMOVE_TRAILING_SLASH: true
      
    networks:
      - kompose_network
      
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/heartbeat || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
      
    labels:
      # Traefik enabled/disabled per service
      - 'traefik.enable=${TRAEFIK_ENABLED_TRACK:-false}'
      
      # HTTP to HTTPS redirect (only for production when PROTOCOL=https)
      - 'traefik.http.middlewares.${TRACK_COMPOSE_PROJECT_NAME}-redirect-web-secure.redirectscheme.scheme=${PROTOCOL}'
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web.middlewares=${TRACK_COMPOSE_PROJECT_NAME}-redirect-web-secure'
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web.rule=Host(`${SUBDOMAIN_TRACK}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web.entrypoints=web'
      
      # Secure configuration (HTTPS in production, HTTP in local)
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web-secure.rule=Host(`${SUBDOMAIN_TRACK}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web-secure.tls.certresolver=${PROTOCOL:+resolver}'
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web-secure.tls=${PROTOCOL:+true}'
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web-secure.entrypoints=web-secure'
      
      # Dual middleware: SSO for admin, public for tracking endpoint
      - 'traefik.http.routers.${TRACK_COMPOSE_PROJECT_NAME}-web-secure.middlewares=umami-auth-selector'
      - 'traefik.http.middlewares.umami-auth-selector.chain.middlewares=sso-secure'
      
      # Load balancer configuration
      - 'traefik.http.services.${TRACK_COMPOSE_PROJECT_NAME}-web-secure.loadbalancer.server.port=3000'
      - 'traefik.docker.network=${NETWORK_NAME:-kompose}'
      
      # Monitoring Labels
      - 'prometheus.scrape=true'
      - 'prometheus.port=3000'
      - 'prometheus.path=/api/metrics'
      
      # CORS Headers for tracking script
      - 'traefik.http.middlewares.umami-cors.headers.accesscontrolallowmethods=GET,POST,OPTIONS'
      - 'traefik.http.middlewares.umami-cors.headers.accesscontrolalloworiginlist=*'
      - 'traefik.http.middlewares.umami-cors.headers.accesscontrolallowheaders=Content-Type,Authorization'

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
