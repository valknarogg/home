# ===================================================================
# KOMPOSE - Secrets Configuration Template
# ===================================================================
# This file contains SENSITIVE data and should NOT be committed to git.
# Ensure secrets.env is in your .gitignore file!
#
# Generate secrets with:    ./kompose.sh secrets generate
# List all secrets:         ./kompose.sh secrets list
# Validate configuration:   ./kompose.sh secrets validate
# Rotate a secret:          ./kompose.sh secrets rotate SECRET_NAME
# ===================================================================

# -------------------------------------------------------------------
# Shared Database Secrets
# -------------------------------------------------------------------
# PostgreSQL password for all database connections
# Used by: core (postgres), auth (keycloak), chain (n8n, semaphore), etc.
DB_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Shared Redis Secrets
# -------------------------------------------------------------------
# Redis password for cache and session storage
# Used by: core (redis), auth (oauth2-proxy sessions)
REDIS_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Redis Commander API password
CORE_REDIS_API_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Shared Admin Secrets
# -------------------------------------------------------------------
# Default admin password for services that use it
# Used by: multiple services as fallback admin credential
ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Shared Email/SMTP Secrets
# -------------------------------------------------------------------
# SMTP password for sending emails from all services
# Used by: chain (n8n, semaphore), messaging (mailhog relay), etc.
EMAIL_SMTP_PASSWORD=CHANGE_ME_SMTP_PASSWORD_OR_LEAVE_EMPTY

# -------------------------------------------------------------------
# AUTH Stack Secrets (Keycloak + OAuth2 Proxy)
# -------------------------------------------------------------------
# Keycloak admin password for web UI access
AUTH_KEYCLOAK_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# OAuth2 Proxy secrets for SSO functionality
AUTH_OAUTH2_CLIENT_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE
AUTH_OAUTH2_COOKIE_SECRET=CHANGE_ME_GENERATE_BASE64_32

# Generate OAuth2 cookie secret with: openssl rand -base64 32

# -------------------------------------------------------------------
# CODE Stack Secrets (Gitea)
# -------------------------------------------------------------------
# Gitea secret keys for encryption and signing
GITEA_SECRET_KEY=CHANGE_ME_GENERATE_HEX_64
GITEA_INTERNAL_TOKEN=CHANGE_ME_GENERATE_HEX_105
GITEA_OAUTH2_JWT_SECRET=CHANGE_ME_GENERATE_BASE64_32
GITEA_METRICS_TOKEN=CHANGE_ME_GENERATE_HEX_32

# Gitea Actions runner token (generate in Gitea UI after first setup)
CODE_GITEA_RUNNER_TOKEN=CHANGE_ME_GENERATE_IN_GITEA_UI

# Generate with:
# - hex 64:  openssl rand -hex 32
# - hex 105: openssl rand -hex 52 | cut -c1-105
# - base64:  openssl rand -base64 32

# -------------------------------------------------------------------
# CHAIN Stack Secrets (n8n + Semaphore)
# -------------------------------------------------------------------
# n8n encryption key for workflow credentials
CHAIN_N8N_ENCRYPTION_KEY=CHANGE_ME_GENERATE_WITH_KOMPOSE

# n8n basic auth password
CHAIN_N8N_BASIC_AUTH_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Semaphore admin password
CHAIN_SEMAPHORE_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Semaphore runner token for task execution
CHAIN_SEMAPHORE_RUNNER_TOKEN=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# KMPS Stack Secrets (Management Portal)
# -------------------------------------------------------------------
# Keycloak client secret for KMPS admin operations
# Generate this in Keycloak UI after creating the kmps-admin client
KMPS_CLIENT_SECRET=CHANGE_ME_GENERATE_FROM_KEYCLOAK

# NextAuth secret for session encryption
KMPS_NEXTAUTH_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# MESSAGING Stack Secrets
# -------------------------------------------------------------------
# Gotify default user password
MESSAGING_GOTIFY_DEFAULTUSER_PASS=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# NEWS Stack Secrets (Letterpress)
# -------------------------------------------------------------------
# JWT secret for authentication
NEWS_JWT_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# SEXY Stack Secrets (Directus)
# -------------------------------------------------------------------
# Directus secret key for encryption
SEXY_DIRECTUS_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Directus admin password
SEXY_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# TRACK Stack Secrets (Umami)
# -------------------------------------------------------------------
# Umami application secret for session management
TRACK_APP_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# VAULT Stack Secrets (Vaultwarden)
# -------------------------------------------------------------------
# Optional: Admin token for Vaultwarden admin panel
# Leave commented to disable admin panel
# VAULT_ADMIN_TOKEN=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# WATCH Stack Secrets (Monitoring)
# -------------------------------------------------------------------
# Prometheus dashboard basic auth
# Generate with: htpasswd -nb admin yourpassword
WATCH_PROMETHEUS_AUTH=CHANGE_ME_HTPASSWD_FORMAT

# Grafana admin password
WATCH_GRAFANA_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Grafana database password
WATCH_GRAFANA_DB_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# PostgreSQL exporter password
WATCH_POSTGRES_EXPORTER_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Redis exporter password
WATCH_REDIS_EXPORTER_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Loki basic auth
# Generate with: htpasswd -nb admin yourpassword
WATCH_LOKI_AUTH=CHANGE_ME_HTPASSWD_FORMAT

# Alertmanager basic auth
# Generate with: htpasswd -nb admin yourpassword
WATCH_ALERTMANAGER_AUTH=CHANGE_ME_HTPASSWD_FORMAT

# -------------------------------------------------------------------
# PROXY Stack Secrets (Traefik)
# -------------------------------------------------------------------
# Traefik dashboard basic auth
# Generate with: htpasswd -nb admin yourpassword
# Format: username:$apr1$hash
TRAEFIK_DASHBOARD_AUTH=CHANGE_ME_HTPASSWD_FORMAT

# -------------------------------------------------------------------
# DASH Stack Secrets (NextAuth)
# -------------------------------------------------------------------
# NextAuth secret for session encryption
DASH_NEXTAUTH_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Secret Generation Commands Reference
# -------------------------------------------------------------------
# Random password (32 chars):
#   openssl rand -base64 32 | tr -d "=+/" | cut -c1-32
#
# Hex string (64 chars):
#   openssl rand -hex 32
#
# Hex string (105 chars):
#   openssl rand -hex 52 | cut -c1-105
#
# Base64 secret (32 bytes):
#   openssl rand -base64 32
#
# htpasswd format (basic auth):
#   htpasswd -nb admin yourpassword
#
# UUID v4:
#   uuidgen | tr '[:upper:]' '[:lower:]'
#
# Or use the built-in generator:
#   ./kompose.sh secrets generate
#
# Generate single secret:
#   ./kompose.sh secrets generate SECRET_NAME
# ===================================================================

# -------------------------------------------------------------------
# Security Best Practices
# -------------------------------------------------------------------
# 1. Never commit this file to version control
# 2. Use strong, unique passwords for each secret
# 3. Rotate secrets regularly (especially after team changes)
# 4. Store backups in a secure password manager
# 5. Use the secrets rotation command when needed:
#    ./kompose.sh secrets rotate SECRET_NAME
# 6. Validate secrets after generation:
#    ./kompose.sh secrets validate
# ===================================================================
