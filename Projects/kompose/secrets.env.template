# ===================================================================
# KOMPOSE - Secrets Configuration
# ===================================================================
# This file contains SENSITIVE data and should NOT be committed to git.
# Ensure secrets.env is in your .gitignore file!
#
# Generate random secrets with: ./kompose.sh secrets generate
# List all secrets with:        ./kompose.sh secrets list
# Validate configuration:       ./kompose.sh secrets validate
# Rotate a secret:              ./kompose.sh secrets rotate SECRET_NAME
# ===================================================================

# -------------------------------------------------------------------
# Shared Database Secrets
# -------------------------------------------------------------------
# PostgreSQL password for all database connections
# Used by: core (postgres), auth (keycloak), chain (n8n, semaphore), etc.
DB_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Shared Redis Secrets
# -------------------------------------------------------------------
# Redis password for cache and session storage
# Used by: core (redis), auth (oauth2-proxy sessions)
REDIS_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE
REDIS_API_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Shared Admin Secrets
# -------------------------------------------------------------------
# Default admin password for services that use it
# Some services may have their own admin passwords (see below)
ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# Shared Email/SMTP Secrets
# -------------------------------------------------------------------
# SMTP password for sending emails from all services
# Used by: chain (n8n, semaphore), messaging (mailhog), etc.
EMAIL_SMTP_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# AUTH Stack Secrets (Keycloak + OAuth2 Proxy)
# Scope: ${TRAEFIK_HOST_AUTH}, ${TRAEFIK_HOST_OAUTH2}
# -------------------------------------------------------------------
# Keycloak admin password for web UI access
KC_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE
AUTH_KC_ADMIN_PASSWORD=${KC_ADMIN_PASSWORD}

# OAuth2 Proxy secrets for SSO functionality
OAUTH2_CLIENT_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE
OAUTH2_COOKIE_SECRET=CHANGE_ME_32_BYTE_BASE64
AUTH_OAUTH2_CLIENT_SECRET=${OAUTH2_CLIENT_SECRET}
AUTH_OAUTH2_COOKIE_SECRET=${OAUTH2_COOKIE_SECRET}

# Generate with: openssl rand -base64 32

# -------------------------------------------------------------------
# CODE Stack Secrets (Gitea)
# Scope: ${TRAEFIK_HOST_CODE}
# -------------------------------------------------------------------
# Gitea secret keys
GITEA_SECRET_KEY=CHANGE_ME_GENERATE_WITH_OPENSSL_HEX_64
GITEA_INTERNAL_TOKEN=CHANGE_ME_GENERATE_WITH_OPENSSL_HEX_105
GITEA_OAUTH2_JWT_SECRET=CHANGE_ME_GENERATE_WITH_OPENSSL_BASE64_32
GITEA_METRICS_TOKEN=CHANGE_ME_GENERATE_WITH_OPENSSL_HEX_32

# Gitea Actions runner token (generate in Gitea UI after first setup)
CODE_RUNNER_TOKEN=CHANGE_ME_GENERATE_WITH_GITEA_UI

# -------------------------------------------------------------------
# CHAIN Stack Secrets (n8n + Semaphore)
# Scope: ${TRAEFIK_HOST_CHAIN}, ${TRAEFIK_HOST_AUTO}
# -------------------------------------------------------------------
# n8n encryption key for workflow credentials
N8N_ENCRYPTION_KEY=CHANGE_ME_GENERATE_WITH_KOMPOSE
AUTO_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

# n8n basic auth password
N8N_BASIC_AUTH_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Semaphore admin password and runner token
SEMAPHORE_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE
SEMAPHORE_RUNNER_TOKEN=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# SEXY Stack Secrets (Directus)
# Scope: ${TRAEFIK_HOST_SEXY}
# -------------------------------------------------------------------
# Directus secret key for encryption
SEXY_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# Directus admin password
SEXY_ADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# KMPS Stack Secrets (Management Portal)
# Scope: ${TRAEFIK_HOST_MANAGE}
# -------------------------------------------------------------------
# Keycloak client secret for KMPS admin operations
KMPS_CLIENT_SECRET=CHANGE_ME_GENERATE_FROM_KEYCLOAK

# NextAuth secret for session encryption
KMPS_NEXTAUTH_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# DASH Stack Secrets (NextAuth)
# Scope: ${TRAEFIK_HOST_DASH}
# -------------------------------------------------------------------
# NextAuth secret for session encryption
DASH_NEXTAUTH_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# NEWS Stack Secrets (Letterspace)
# Scope: ${TRAEFIK_HOST_NEWS}
# -------------------------------------------------------------------
# JWT secret for authentication
NEWS_JWT_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# TRACK Stack Secrets (Umami)
# Scope: ${TRAEFIK_HOST_TRACK}
# -------------------------------------------------------------------
# Umami application secret
TRACK_APP_SECRET=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# MESSAGING Stack Secrets (Gotify + Mailhog)
# Scope: ${TRAEFIK_HOST_CHAT}, ${TRAEFIK_HOST_MAIL}
# -------------------------------------------------------------------
# Note: EMAIL_SMTP_PASSWORD (shared secret) is used by Mailhog
#       when MAILHOG_OUTGOING_SMTP_ENABLED=true

# -------------------------------------------------------------------
# VAULT Stack Secrets (Vaultwarden)
# Scope: ${TRAEFIK_HOST_VAULT}
# -------------------------------------------------------------------
# Optional: Admin token for Vaultwarden admin panel
# Leave commented to disable admin panel
# VAULT_ADMIN_TOKEN=CHANGE_ME_GENERATE_WITH_KOMPOSE

# -------------------------------------------------------------------
# PROXY Stack Secrets (Traefik)
# Scope: ${TRAEFIK_HOST_PROXY}
# -------------------------------------------------------------------
# Traefik dashboard basic auth
# Generate with: htpasswd -nb admin your_password
# Format: user:$apr1$hash
TRAEFIK_DASHBOARD_AUTH=CHANGE_ME_HTPASSWD_FORMAT

# -------------------------------------------------------------------
# Additional Stack Secrets
# Follow the naming convention: STACKNAME_SECRET_PURPOSE
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# Secret Generation Commands
# -------------------------------------------------------------------
# Random 32 character password:
#   openssl rand -base64 32 | tr -d "=+/" | cut -c1-32
#
# Random hex string (64 chars):
#   openssl rand -hex 32
#
# Base64 secret (for OAuth2 cookie):
#   openssl rand -base64 32
#
# htpasswd format (for basic auth):
#   htpasswd -nb admin yourpassword
#
# UUID v4:
#   uuidgen | tr '[:upper:]' '[:lower:]'
#
# Or use the built-in command:
#   ./kompose.sh secrets generate
# ===================================================================
