name: dock

services:
  dockge:
    image: ${DOCKER_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_app
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKGE_STACKS_DIR}:${DOCKGE_STACKS_DIR}
    environment:
      - DOCKGE_STACKS_DIR=${DOCKGE_STACKS_DIR}
    # healthcheck:
    #   test: ["CMD-SHELL", "wget --spider -q http://localhost:$APP_PORT/ || exit 1"]
    #   interval: 30s
    #   timeout: 5s
    #   retries: 3
    ports:
      - ${APP_PORT}:${APP_PORT}
    networks:
      - kompose_network
    # labels:
    #   - 'traefik.enable=true'
    #   - 'traefik.http.middlewares.$COMPOSE_PROJECT_NAME-redirect-web-secure.redirectscheme.scheme=https'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web.middlewares=$COMPOSE_PROJECT_NAME-redirect-web-secure'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web.rule=Host(`$TRAEFIK_HOST`)'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web.entrypoints=web'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web-secure.rule=Host(`$TRAEFIK_HOST`)'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web-secure.tls.certresolver=resolver'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web-secure.entrypoints=web-secure'
    #   - 'traefik.http.middlewares.$COMPOSE_PROJECT_NAME-web-secure-compress.compress=true'
    #   - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-web-secure.middlewares=$COMPOSE_PROJECT_NAME-web-secure-compress'
    #   - 'traefik.http.services.$COMPOSE_PROJECT_NAME-web-secure.loadbalancer.server.port=$APP_PORT'
    #   - 'traefik.docker.network=kompose_network'

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
