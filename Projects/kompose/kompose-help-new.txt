usage() {
    local exit_code="${1:-1}"
    echo -e "$(
    cat << EOM
${CYAN}╔════════════════════════════════════════════════════════════════╗${NC}
${CYAN}║              KOMPOSE - Docker Compose Stack Manager            ║${NC}
${CYAN}║                      Modular Edition 2.0                       ║${NC}
${CYAN}╚════════════════════════════════════════════════════════════════╝${NC}

${BLUE}USAGE:${NC}
    kompose <command> [options] [arguments]

${BLUE}CORE STACK COMMANDS:${NC}
    up [STACK]           Start stack(s)
    down [STACK]         Stop stack(s)
    restart [STACK]      Restart stack(s)
    status [STACK]       Show stack status
    logs STACK [opts]    Show stack logs
    pull [STACK]         Pull latest images
    build STACK          Build stack images
    deploy STACK VER     Deploy specific version
    list                 List all stacks
    ps                   Show all containers
    exec STACK CMD       Execute command in container

${BLUE}CONFIGURATION & SETUP:${NC}
    init                 Interactive guided setup wizard
    setup local          Switch to local development mode
    setup prod           Switch to production mode  
    setup status         Show current configuration
    validate             Validate entire configuration

${MAGENTA}SECRETS MANAGEMENT:${NC}
    secrets generate     Generate all secrets interactively
    secrets validate     Check secrets configuration
    secrets list         List all secrets with status
    secrets rotate NAME  Regenerate specific secret
    secrets set NAME VAL Set secret manually
    secrets backup       Backup secrets.env file

${MAGENTA}PROFILE MANAGEMENT:${NC}
    profile list         List available profiles
    profile create       Create new profile
    profile use NAME     Switch to profile
    profile show         Show profile details
    profile up           Start stacks in current profile
    profile current      Show active profile

${YELLOW}DATABASE OPERATIONS:${NC}
    db backup            Create database backup
    db restore           Restore from backup
    db status            Show database status
    db shell             Open database shell
    db exec              Execute SQL command
    db list              List available backups

${MAGENTA}GIT TAG DEPLOYMENTS:${NC}
    tag create           Create deployment tag
    tag deploy           Create tag and deploy
    tag list             List deployment tags
    tag rollback         Rollback to previous tag
    tag status           Show deployment status

${MAGENTA}STACK GENERATOR:${NC}
    generate NAME        Create new custom stack
    generate list        List custom stacks
    generate show NAME   Show stack details
    generate delete NAME Remove custom stack

${MAGENTA}REST API SERVER:${NC}
    api start [PORT]     Start API server (default: 8080)
    api stop             Stop API server
    api status           Check server status
    api logs             View server logs

${CYAN}TESTING:${NC}
    test                 Run all tests
    test -t SUITE        Run specific test suite
    test -i              Run integration tests
    test -u              Update snapshots

${BLUE}UTILITIES:${NC}
    cleanup              Clean backup and temp files
    version              Show version info
    help                 Show this help

${BLUE}COMMON OPTIONS:${NC}
    -d, --detach        Detached mode
    -f, --force         Force operation
    -v, --verbose       Verbose output
    --no-cache          Build without cache
    -s, --stack STACK   Filter by stack

${BLUE}AVAILABLE STACKS:${NC}
$(for stack in "${!STACKS[@]}"; do
    printf "    ${CYAN}%-12s${NC} %s\n" "$stack" "${STACKS[$stack]}"
done | sort)

${MAGENTA}CUSTOM STACKS:${NC}
$(if [ ${#CUSTOM_STACKS[@]} -gt 0 ]; then
    for stack in "${!CUSTOM_STACKS[@]}"; do
        printf "    ${CYAN}%-12s${NC} %s\n" "$stack" "${CUSTOM_STACKS[$stack]}"
    done | sort
else
    printf "    ${YELLOW}(none - add to +custom/ directory)${NC}\n"
fi)

${BLUE}QUICK START EXAMPLES:${NC}
    ${GREEN}# Initialize new deployment${NC}
    kompose init
    kompose secrets generate
    kompose up

    ${GREEN}# Manage stacks${NC}
    kompose up core auth             # Start specific stacks
    kompose status                   # Check all stack status
    kompose logs chain -f            # Follow chain stack logs
    kompose restart home             # Restart home stack

    ${MAGENTA}# Secrets & Configuration${NC}
    kompose secrets validate         # Verify secrets
    kompose secrets rotate DB_PASSWORD
    kompose setup prod               # Switch to production

    ${YELLOW}# Database Operations${NC}
    kompose db backup                # Backup all databases
    kompose db shell -d gitea        # Open Gitea DB shell
    kompose db restore -f backup.sql

    ${MAGENTA}# Profiles${NC}
    kompose profile create dev-minimal
    kompose profile use production
    kompose profile up               # Start profile stacks

    ${MAGENTA}# Custom Stacks${NC}
    kompose generate myapp           # Create new stack
    kompose up myapp                 # Start custom stack

${BLUE}DOCUMENTATION:${NC}
    Full documentation: https://github.com/yourusername/kompose
    Report issues: https://github.com/yourusername/kompose/issues

EOM
)"
    exit $exit_code
}
