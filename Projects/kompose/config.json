{
  "auth": {
    "AUTH_COMPOSE_PROJECT_NAME": {
      "default": "auth",
      "description": "Auth stack project name",
      "required": true
    },
    "AUTH_DOCKER_IMAGE": {
      "default": "quay.io/keycloak/keycloak:latest",
      "description": "Keycloak Docker image",
      "required": false
    },
    "AUTH_DB_NAME": {
      "default": "keycloak",
      "description": "Keycloak database name",
      "required": true
    },
    "TRAEFIK_HOST_AUTH": {
      "default": "",
      "description": "Keycloak hostname (e.g., auth.example.com)",
      "required": true
    },
    "AUTH_OAUTH2_CLIENT_ID": {
      "default": "kompose-sso",
      "description": "OAuth2 client ID for SSO",
      "required": true
    },
    "TRAEFIK_HOST_OAUTH2": {
      "default": "",
      "description": "OAuth2 proxy hostname (e.g., sso.example.com)",
      "required": true
    }
  },
  "chain": {
    "CHAIN_COMPOSE_PROJECT_NAME": {
      "default": "chain",
      "description": "Chain stack project name",
      "required": true
    },
    "CHAIN_N8N_IMAGE": {
      "default": "n8nio/n8n:latest",
      "description": "n8n Docker image",
      "required": false
    },
    "CHAIN_N8N_DB_NAME": {
      "default": "n8n",
      "description": "n8n database name",
      "required": true
    },
    "TRAEFIK_HOST_CHAIN": {
      "default": "",
      "description": "n8n hostname (e.g., workflow.example.com)",
      "required": true
    },
    "CHAIN_N8N_BASIC_AUTH_ACTIVE": {
      "default": "true",
      "description": "Enable n8n basic authentication",
      "required": false
    },
    "CHAIN_N8N_BASIC_AUTH_USER": {
      "default": "admin",
      "description": "n8n basic auth username",
      "required": true
    },
    "CHAIN_N8N_PORT": {
      "default": "5678",
      "description": "n8n web UI port",
      "required": false
    },
    "CHAIN_SEMAPHORE_IMAGE": {
      "default": "semaphoreui/semaphore:latest",
      "description": "Semaphore Docker image",
      "required": false
    },
    "CHAIN_SEMAPHORE_DB_NAME": {
      "default": "semaphore",
      "description": "Semaphore database name",
      "required": true
    },
    "CHAIN_SEMAPHORE_ADMIN_USERNAME": {
      "default": "admin",
      "description": "Semaphore admin username",
      "required": true
    },
    "CHAIN_SEMAPHORE_ADMIN_NAME": {
      "default": "Admin",
      "description": "Semaphore admin display name",
      "required": false
    },
    "TRAEFIK_HOST_AUTO": {
      "default": "",
      "description": "Semaphore hostname (e.g., auto.example.com)",
      "required": true
    },
    "CHAIN_SEMAPHORE_PORT": {
      "default": "3000",
      "description": "Semaphore web UI port",
      "required": false
    },
    "CHAIN_SEMAPHORE_RUNNER_IMAGE": {
      "default": "public.ecr.aws/semaphore/pro/runner:latest",
      "description": "Semaphore runner Docker image",
      "required": false
    }
  },
  "code": {
    "CODE_COMPOSE_PROJECT_NAME": {
      "default": "code",
      "description": "Code stack project name",
      "required": true
    },
    "CODE_GITEA_IMAGE": {
      "default": "gitea/gitea:latest",
      "description": "Gitea Docker image",
      "required": false
    },
    "CODE_GITEA_UID": {
      "default": "1000",
      "description": "Gitea user ID",
      "required": false
    },
    "CODE_GITEA_GID": {
      "default": "1000",
      "description": "Gitea group ID",
      "required": false
    },
    "TRAEFIK_HOST_CODE": {
      "default": "",
      "description": "Gitea hostname (e.g., git.example.com)",
      "required": true
    },
    "CODE_GITEA_DB_NAME": {
      "default": "gitea",
      "description": "Gitea database name",
      "required": true
    },
    "CODE_GITEA_PORT_SSH": {
      "default": "2222",
      "description": "Gitea SSH port for git operations",
      "required": true
    },
    "CODE_GITEA_PORT_HTTP": {
      "default": "3001",
      "description": "Gitea HTTP port (internal)",
      "required": false
    },
    "CODE_GITEA_DISABLE_REGISTRATION": {
      "default": "false",
      "description": "Disable user registration",
      "required": false
    },
    "CODE_GITEA_REQUIRE_SIGNIN": {
      "default": "false",
      "description": "Require sign-in to view content",
      "required": false
    },
    "CODE_GITEA_EMAIL_CONFIRM": {
      "default": "false",
      "description": "Require email confirmation for registration",
      "required": false
    },
    "CODE_GITEA_WEBHOOK_ALLOWED_HOSTS": {
      "default": "*",
      "description": "Allowed hosts for webhooks",
      "required": false
    },
    "CODE_GITEA_WEBHOOK_SKIP_TLS": {
      "default": "false",
      "description": "Skip TLS verification for webhooks",
      "required": false
    },
    "CODE_GITEA_LOG_LEVEL": {
      "default": "Info",
      "description": "Gitea log level (Trace, Debug, Info, Warn, Error)",
      "required": false
    },
    "CODE_GITEA_RUNNER_IMAGE": {
      "default": "gitea/act_runner:latest",
      "description": "Gitea Actions runner Docker image",
      "required": false
    },
    "CODE_GITEA_RUNNER_NAME": {
      "default": "kompose-runner-1",
      "description": "Gitea Actions runner name",
      "required": false
    },
    "CODE_GITEA_RUNNER_LABELS": {
      "default": "ubuntu-latest:docker://node:16-bullseye",
      "description": "Runner labels for Actions",
      "required": false
    }
  },
  "core": {
    "CORE_COMPOSE_PROJECT_NAME": {
      "default": "core",
      "description": "Core stack project name",
      "required": true
    },
    "CORE_POSTGRES_IMAGE": {
      "default": "postgres:16-alpine",
      "description": "PostgreSQL Docker image",
      "required": false
    },
    "CORE_DB_HOST": {
      "default": "core_postgres",
      "description": "PostgreSQL host (container name)",
      "required": true
    },
    "CORE_DB_PORT": {
      "default": "5432",
      "description": "PostgreSQL port",
      "required": true
    },
    "CORE_DB_NAME": {
      "default": "kompose",
      "description": "Main database name",
      "required": true
    },
    "CORE_POSTGRES_MAX_CONNECTIONS": {
      "default": "100",
      "description": "Maximum PostgreSQL connections",
      "required": false
    },
    "CORE_POSTGRES_SHARED_BUFFERS": {
      "default": "256MB",
      "description": "PostgreSQL shared memory buffers",
      "required": false
    },
    "CORE_REDIS_IMAGE": {
      "default": "redis:7-alpine",
      "description": "Redis Docker image",
      "required": false
    },
    "CORE_REDIS_HOST": {
      "default": "core_redis",
      "description": "Redis host (container name)",
      "required": true
    },
    "CORE_REDIS_PORT": {
      "default": "6379",
      "description": "Redis port",
      "required": true
    },
    "CORE_MOSQUITTO_IMAGE": {
      "default": "eclipse-mosquitto:2",
      "description": "MQTT broker Docker image",
      "required": false
    },
    "CORE_MQTT_PORT": {
      "default": "1883",
      "description": "MQTT broker port",
      "required": true
    },
    "CORE_MQTT_WS_PORT": {
      "default": "9001",
      "description": "MQTT WebSocket port",
      "required": false
    },
    "CORE_REDIS_COMMANDER_IMAGE": {
      "default": "rediscommander/redis-commander:latest",
      "description": "Redis Commander Docker image",
      "required": false
    },
    "CORE_REDIS_API_PORT": {
      "default": "8081",
      "description": "Redis Commander web UI port",
      "required": false
    },
    "CORE_REDIS_API_TRAEFIK_HOST": {
      "default": "",
      "description": "Redis web UI hostname (e.g., redis.example.com)",
      "required": false
    }
  },
  "_docs": {
    "COMPOSE_PROJECT_NAME": {
      "default": "docs",
      "description": "Docs stack project name",
      "required": true
    },
    "DOCKER_IMAGE": {
      "default": "joseluisq/static-web-server:latest",
      "description": "Static web server Docker image",
      "required": false
    },
    "TRAEFIK_HOST": {
      "default": "",
      "description": "Documentation hostname (e.g., docs.example.com)",
      "required": true
    }
  },
  "global": {
    "TIMEZONE": {
      "default": "Europe/Amsterdam",
      "description": "System timezone for all containers",
      "required": true
    },
    "NETWORK_NAME": {
      "default": "kompose",
      "description": "Docker network name for inter-service communication",
      "required": true
    },
    "BASE_DOMAIN": {
      "default": "",
      "description": "Base domain for all services (e.g., example.com)",
      "required": true
    },
    "ADMIN_EMAIL": {
      "default": "",
      "description": "Administrator email address for notifications",
      "required": true
    },
    "NODE_ENV": {
      "default": "production",
      "description": "Node.js environment mode",
      "required": false
    },
    "EMAIL_FROM": {
      "default": "noreply@example.com",
      "description": "Default sender email address",
      "required": true
    },
    "EMAIL_TRANSPORT": {
      "default": "smtp",
      "description": "Email transport protocol",
      "required": false
    }
  },
  "home": {
    "HOME_COMPOSE_PROJECT_NAME": {
      "default": "home",
      "description": "Home stack project name",
      "required": true
    },
    "HOME_HOMEASSISTANT_IMAGE": {
      "default": "ghcr.io/home-assistant/home-assistant:stable",
      "description": "Home Assistant Docker image",
      "required": false
    },
    "HOME_HOMEASSISTANT_PORT": {
      "default": "8123",
      "description": "Home Assistant web UI port",
      "required": false
    },
    "TRAEFIK_HOST_HOME": {
      "default": "",
      "description": "Home Assistant hostname (e.g., home.example.com)",
      "required": true
    },
    "HOME_MATTER_SERVER_IMAGE": {
      "default": "ghcr.io/home-assistant-libs/python-matter-server:stable",
      "description": "Matter server Docker image",
      "required": false
    },
    "HOME_ZIGBEE2MQTT_IMAGE": {
      "default": "koenkk/zigbee2mqtt:latest",
      "description": "Zigbee2MQTT Docker image",
      "required": false
    },
    "HOME_ZIGBEE2MQTT_PORT": {
      "default": "8080",
      "description": "Zigbee2MQTT web UI port",
      "required": false
    },
    "TRAEFIK_HOST_ZIGBEE": {
      "default": "",
      "description": "Zigbee2MQTT hostname (e.g., zigbee.example.com)",
      "required": false
    },
    "HOME_ESPHOME_IMAGE": {
      "default": "ghcr.io/esphome/esphome:stable",
      "description": "ESPHome Docker image",
      "required": false
    }
  },
  "kmps": {
    "KMPS_COMPOSE_PROJECT_NAME": {
      "default": "kmps",
      "description": "KMPS stack project name",
      "required": true
    },
    "KMPS_DOCKER_IMAGE": {
      "default": "node:20-alpine",
      "description": "KMPS Docker image",
      "required": false
    },
    "KMPS_API_PORT": {
      "default": "8080",
      "description": "KMPS API server port",
      "required": true
    },
    "KMPS_API_HOST": {
      "default": "0.0.0.0",
      "description": "KMPS API server host",
      "required": false
    },
    "KOMPOSE_ROOT": {
      "default": "/home/valknar/Projects/kompose",
      "description": "Kompose project root directory",
      "required": true
    },
    "KMPS_REALM": {
      "default": "kompose",
      "description": "Keycloak realm name",
      "required": true
    },
    "KMPS_CLIENT_ID": {
      "default": "kmps-admin",
      "description": "Keycloak admin client ID",
      "required": true
    },
    "TRAEFIK_HOST_MANAGE": {
      "default": "",
      "description": "KMPS portal hostname (e.g., manage.example.com)",
      "required": true
    },
    "KMPS_DB_NAME": {
      "default": "kmps",
      "description": "KMPS database name",
      "required": true
    },
    "KMPS_APP_PORT": {
      "default": "3100",
      "description": "KMPS web application port",
      "required": false
    }
  },
  "link": {
    "LINK_COMPOSE_PROJECT_NAME": {
      "default": "link",
      "description": "Link stack project name",
      "required": true
    },
    "LINK_DOCKER_IMAGE": {
      "default": "ghcr.io/linkwarden/linkwarden:latest",
      "description": "Linkwarden Docker image",
      "required": false
    },
    "LINK_DB_NAME": {
      "default": "linkwarden",
      "description": "Linkwarden database name",
      "required": true
    },
    "TRAEFIK_HOST_LINK": {
      "default": "",
      "description": "Linkwarden hostname (e.g., links.example.com)",
      "required": true
    },
    "LINK_APP_PORT": {
      "default": "3000",
      "description": "Linkwarden web UI port",
      "required": false
    },
    "LINK_DISABLE_SCREENSHOT": {
      "default": "false",
      "description": "Disable automatic screenshots",
      "required": false
    },
    "LINK_DISABLE_ARCHIVE": {
      "default": "false",
      "description": "Disable automatic archiving",
      "required": false
    },
    "LINK_DISABLE_REGISTRATION": {
      "default": "false",
      "description": "Disable user registration",
      "required": false
    }
  },
  "messaging": {
    "MESSAGING_COMPOSE_PROJECT_NAME": {
      "default": "messaging",
      "description": "Messaging stack project name",
      "required": true
    },
    "MESSAGING_GOTIFY_IMAGE": {
      "default": "gotify/server:latest",
      "description": "Gotify Docker image",
      "required": false
    },
    "MESSAGING_GOTIFY_DEFAULTUSER_NAME": {
      "default": "admin",
      "description": "Gotify default admin username",
      "required": true
    },
    "MESSAGING_GOTIFY_PORT": {
      "default": "8085",
      "description": "Gotify port",
      "required": false
    },
    "TRAEFIK_HOST_CHAT": {
      "default": "",
      "description": "Gotify hostname (e.g., chat.example.com)",
      "required": true
    },
    "MESSAGING_MAILHOG_IMAGE": {
      "default": "mailhog/mailhog:latest",
      "description": "Mailhog Docker image",
      "required": false
    },
    "MESSAGING_MAILHOG_OUTGOING_SMTP_ENABLED": {
      "default": "false",
      "description": "Enable outgoing SMTP relay",
      "required": false
    },
    "EMAIL_SMTP_HOST": {
      "default": "messaging_mailhog",
      "description": "SMTP host for outgoing email",
      "required": true
    },
    "EMAIL_SMTP_PORT": {
      "default": "1025",
      "description": "SMTP port",
      "required": true
    },
    "TRAEFIK_HOST_MAIL": {
      "default": "",
      "description": "Mailhog hostname (e.g., mail.example.com)",
      "required": true
    },
    "MESSAGING_MAILHOG_PORT": {
      "default": "8025",
      "description": "Mailhog web UI port",
      "required": false
    }
  },
  "proxy": {
    "PROXY_COMPOSE_PROJECT_NAME": {
      "default": "proxy",
      "description": "Proxy stack project name",
      "required": true
    },
    "PROXY_DOCKER_IMAGE": {
      "default": "traefik:latest",
      "description": "Traefik Docker image",
      "required": false
    },
    "PROXY_LOG_LEVEL": {
      "default": "INFO",
      "description": "Traefik log level (DEBUG, INFO, WARN, ERROR)",
      "required": false
    },
    "PROXY_PORT_HTTP": {
      "default": "80",
      "description": "HTTP port",
      "required": true
    },
    "PROXY_PORT_HTTPS": {
      "default": "443",
      "description": "HTTPS port",
      "required": true
    },
    "PROXY_PORT_DASHBOARD": {
      "default": "8080",
      "description": "Traefik dashboard port (localhost only)",
      "required": false
    },
    "TRAEFIK_HOST_PROXY": {
      "default": "",
      "description": "Traefik dashboard hostname (e.g., proxy.example.com)",
      "required": false
    }
  },
  "track": {
    "TRACK_COMPOSE_PROJECT_NAME": {
      "default": "track",
      "description": "Track stack project name",
      "required": true
    },
    "TRACK_DOCKER_IMAGE": {
      "default": "ghcr.io/umami-software/umami:postgresql-latest",
      "description": "Umami Docker image",
      "required": false
    },
    "TRACK_DB_NAME": {
      "default": "umami",
      "description": "Umami database name",
      "required": true
    },
    "TRAEFIK_HOST_TRACK": {
      "default": "",
      "description": "Umami hostname (e.g., analytics.example.com)",
      "required": true
    },
    "MQTT_ENABLED": {
      "default": "true",
      "description": "Enable MQTT real-time events",
      "required": false
    }
  },
  "vault": {
    "VAULT_COMPOSE_PROJECT_NAME": {
      "default": "vault",
      "description": "Vault stack project name",
      "required": true
    },
    "VAULT_DOCKER_IMAGE": {
      "default": "vaultwarden/server:latest",
      "description": "Vaultwarden Docker image",
      "required": false
    },
    "VAULT_DB_NAME": {
      "default": "vaultwarden",
      "description": "Vaultwarden database name (optional)",
      "required": false
    },
    "TRAEFIK_HOST_VAULT": {
      "default": "",
      "description": "Vaultwarden hostname (e.g., vault.example.com)",
      "required": true
    },
    "VAULT_WEBSOCKET_ENABLED": {
      "default": "true",
      "description": "Enable WebSocket support",
      "required": false
    },
    "VAULT_SIGNUPS_ALLOWED": {
      "default": "false",
      "description": "Allow new user registrations",
      "required": false
    },
    "VAULT_APP_PORT": {
      "default": "80",
      "description": "Vaultwarden web UI port",
      "required": false
    },
    "VAULT_MQTT_ENABLED": {
      "default": "true",
      "description": "Enable MQTT security event publishing",
      "required": false
    }
  },
  "vpn": {
    "VPN_COMPOSE_PROJECT_NAME": {
      "default": "vpn",
      "description": "VPN stack project name",
      "required": true
    },
    "VPN_DOCKER_IMAGE": {
      "default": "ghcr.io/wg-easy/wg-easy:latest",
      "description": "WireGuard Easy Docker image",
      "required": false
    },
    "VPN_WG_HOST": {
      "default": "",
      "description": "WireGuard public hostname or IP",
      "required": true
    },
    "VPN_WG_PORT": {
      "default": "51820",
      "description": "WireGuard UDP port",
      "required": true
    },
    "VPN_APP_PORT": {
      "default": "51821",
      "description": "WG-Easy web UI port",
      "required": true
    },
    "VPN_LANG": {
      "default": "en",
      "description": "WG-Easy UI language",
      "required": false
    },
    "VPN_UI_TRAFFIC_STATS": {
      "default": "true",
      "description": "Show traffic statistics in UI",
      "required": false
    },
    "VPN_UI_CHART_TYPE": {
      "default": "0",
      "description": "Chart type for traffic stats (0=Line, 1=Area, 2=Bar)",
      "required": false
    },
    "VPN_WG_ALLOWED_IPS": {
      "default": "0.0.0.0/0, ::/0",
      "description": "Allowed IPs for VPN clients",
      "required": false
    },
    "VPN_WG_DEFAULT_ADDRESS": {
      "default": "10.8.0.x",
      "description": "Default client IP address template",
      "required": false
    },
    "VPN_WG_DEFAULT_DNS": {
      "default": "1.1.1.1",
      "description": "Default DNS server for VPN clients",
      "required": false
    },
    "VPN_WG_PERSISTENT_KEEPALIVE": {
      "default": "25",
      "description": "WireGuard keepalive interval",
      "required": false
    },
    "VPN_WG_MTU": {
      "default": "1420",
      "description": "WireGuard MTU size",
      "required": false
    },
    "TRAEFIK_HOST_VPN": {
      "default": "",
      "description": "WG-Easy web UI hostname (e.g., vpn.example.com)",
      "required": true
    }
  },
  "watch": {
    "WATCH_COMPOSE_PROJECT_NAME": {
      "default": "watch",
      "description": "Watch stack project name",
      "required": true
    },
    "WATCH_PROMETHEUS_IMAGE": {
      "default": "prom/prometheus:latest",
      "description": "Prometheus Docker image",
      "required": false
    },
    "WATCH_PROMETHEUS_RETENTION": {
      "default": "30d",
      "description": "Prometheus data retention period",
      "required": false
    },
    "WATCH_PROMETHEUS_PORT": {
      "default": "9090",
      "description": "Prometheus web UI port",
      "required": false
    },
    "TRAEFIK_HOST_PROMETHEUS": {
      "default": "",
      "description": "Prometheus hostname (e.g., prometheus.example.com)",
      "required": true
    },
    "WATCH_GRAFANA_IMAGE": {
      "default": "grafana/grafana:latest",
      "description": "Grafana Docker image",
      "required": false
    },
    "WATCH_GRAFANA_ADMIN_USER": {
      "default": "admin",
      "description": "Grafana admin username",
      "required": true
    },
    "WATCH_GRAFANA_PLUGINS": {
      "default": "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel",
      "description": "Grafana plugins to install",
      "required": false
    },
    "WATCH_GRAFANA_DB_NAME": {
      "default": "grafana",
      "description": "Grafana database name",
      "required": true
    },
    "WATCH_GRAFANA_DB_USER": {
      "default": "grafana",
      "description": "Grafana database user",
      "required": true
    },
    "WATCH_GRAFANA_PORT": {
      "default": "3010",
      "description": "Grafana web UI port",
      "required": false
    },
    "TRAEFIK_HOST_GRAFANA": {
      "default": "",
      "description": "Grafana hostname (e.g., grafana.example.com)",
      "required": true
    },
    "WATCH_OTEL_IMAGE": {
      "default": "otel/opentelemetry-collector-contrib:latest",
      "description": "OpenTelemetry Collector Docker image",
      "required": false
    },
    "WATCH_OTEL_GRPC_PORT": {
      "default": "4317",
      "description": "OTLP gRPC receiver port",
      "required": false
    },
    "WATCH_OTEL_HTTP_PORT": {
      "default": "4318",
      "description": "OTLP HTTP receiver port",
      "required": false
    },
    "WATCH_OTEL_HEALTH_PORT": {
      "default": "13133",
      "description": "OpenTelemetry health check port",
      "required": false
    },
    "WATCH_OTEL_ZPAGES_PORT": {
      "default": "55679",
      "description": "OpenTelemetry zPages extension port",
      "required": false
    },
    "WATCH_POSTGRES_EXPORTER_IMAGE": {
      "default": "prometheuscommunity/postgres-exporter:latest",
      "description": "PostgreSQL Exporter Docker image",
      "required": false
    },
    "WATCH_POSTGRES_EXPORTER_USER": {
      "default": "kompose",
      "description": "PostgreSQL exporter database user",
      "required": true
    },
    "WATCH_POSTGRES_EXPORTER_DB": {
      "default": "kompose",
      "description": "PostgreSQL exporter database name",
      "required": true
    },
    "WATCH_POSTGRES_EXPORTER_PORT": {
      "default": "9187",
      "description": "PostgreSQL exporter metrics port",
      "required": false
    },
    "WATCH_REDIS_EXPORTER_IMAGE": {
      "default": "oliver006/redis_exporter:latest",
      "description": "Redis Exporter Docker image",
      "required": false
    },
    "WATCH_REDIS_EXPORTER_PORT": {
      "default": "9121",
      "description": "Redis exporter metrics port",
      "required": false
    },
    "WATCH_MQTT_EXPORTER_IMAGE": {
      "default": "kpetrem/mqtt-exporter:latest",
      "description": "MQTT Exporter Docker image",
      "required": false
    },
    "WATCH_MQTT_EXPORTER_TOPIC": {
      "default": "#",
      "description": "MQTT topics to monitor",
      "required": false
    },
    "WATCH_MQTT_V5_PROTOCOL": {
      "default": "False",
      "description": "Use MQTT v5 protocol",
      "required": false
    },
    "WATCH_MQTT_EXPORTER_PORT": {
      "default": "9000",
      "description": "MQTT exporter metrics port",
      "required": false
    },
    "WATCH_CADVISOR_IMAGE": {
      "default": "gcr.io/cadvisor/cadvisor:latest",
      "description": "cAdvisor Docker image",
      "required": false
    },
    "WATCH_CADVISOR_PORT": {
      "default": "8082",
      "description": "cAdvisor web UI port",
      "required": false
    },
    "WATCH_NODE_EXPORTER_IMAGE": {
      "default": "prom/node-exporter:latest",
      "description": "Node Exporter Docker image",
      "required": false
    },
    "WATCH_BLACKBOX_EXPORTER_IMAGE": {
      "default": "prom/blackbox-exporter:latest",
      "description": "Blackbox Exporter Docker image",
      "required": false
    },
    "WATCH_BLACKBOX_EXPORTER_PORT": {
      "default": "9115",
      "description": "Blackbox exporter port",
      "required": false
    },
    "WATCH_LOKI_IMAGE": {
      "default": "grafana/loki:latest",
      "description": "Loki Docker image",
      "required": false
    },
    "WATCH_LOKI_PORT": {
      "default": "3100",
      "description": "Loki API port",
      "required": false
    },
    "TRAEFIK_HOST_LOKI": {
      "default": "",
      "description": "Loki hostname (e.g., loki.example.com)",
      "required": false
    },
    "WATCH_PROMTAIL_IMAGE": {
      "default": "grafana/promtail:latest",
      "description": "Promtail Docker image",
      "required": false
    },
    "WATCH_PROMTAIL_PORT": {
      "default": "9080",
      "description": "Promtail metrics port",
      "required": false
    },
    "WATCH_ALERTMANAGER_IMAGE": {
      "default": "prom/alertmanager:latest",
      "description": "Alertmanager Docker image",
      "required": false
    },
    "WATCH_ALERTMANAGER_PORT": {
      "default": "9093",
      "description": "Alertmanager web UI port",
      "required": false
    },
    "TRAEFIK_HOST_ALERTMANAGER": {
      "default": "",
      "description": "Alertmanager hostname (e.g., alerts.example.com)",
      "required": false
    }
  }
}
