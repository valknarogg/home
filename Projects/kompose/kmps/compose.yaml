name: ${KMPS_COMPOSE_PROJECT_NAME}

services:
  # Kompose API Server
  kompose-api:
    image: ${KMPS_DOCKER_IMAGE:-python:3.11-alpine}
    container_name: ${KMPS_COMPOSE_PROJECT_NAME}_api
    restart: unless-stopped
    working_dir: /kompose
    command: sh -c "python3 /kompose/kompose-api-server.sh"
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
      API_PORT: ${KMPS_API_PORT:-8080}
      API_HOST: ${KMPS_API_HOST:-0.0.0.0}
      KOMPOSE_SCRIPT: /kompose/kompose.sh
    volumes:
      - ${KOMPOSE_ROOT:-/home/valknar/Projects/kompose}:/kompose:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:${KMPS_API_PORT:-8080}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - kompose_network
    labels:
      - 'traefik.enable=false'

  # Kompose Management Portal & SSO Administration
  kmps-app:
    image: ${KMPS_DOCKER_IMAGE:-node:20-alpine}
    container_name: ${KMPS_COMPOSE_PROJECT_NAME}_app
    restart: unless-stopped
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
      NODE_ENV: ${NODE_ENV:-production}
      
      # Keycloak Admin API Configuration
      KEYCLOAK_URL: ${PROTOCOL}://${SUBDOMAIN_AUTH}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}
      KEYCLOAK_REALM: ${KMPS_REALM:-kompose}
      KEYCLOAK_CLIENT_ID: ${KMPS_CLIENT_ID:-kmps-admin}
      KEYCLOAK_CLIENT_SECRET: ${KMPS_CLIENT_SECRET}
      
      # Kompose API Configuration
      KOMPOSE_API_URL: http://${KMPS_COMPOSE_PROJECT_NAME}_api:${KMPS_API_PORT:-8080}
      
      # Database Configuration
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${CORE_DB_HOST}:${CORE_DB_PORT}/${KMPS_DB_NAME}
      
      # App Configuration
      NEXT_PUBLIC_APP_NAME: "Kompose Management Portal"
      NEXT_PUBLIC_SSO_URL: ${PROTOCOL}://${SUBDOMAIN_OAUTH2}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}
      NEXT_PUBLIC_AUTH_URL: ${PROTOCOL}://${SUBDOMAIN_AUTH}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}
      
      # Session & Security
      NEXTAUTH_URL: ${PROTOCOL}://${SUBDOMAIN_MANAGE}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}
      NEXTAUTH_SECRET: ${KMPS_NEXTAUTH_SECRET}
      
      # App Port
      APP_PORT: ${KMPS_APP_PORT:-3100}
      
      # Admin Email for initial setup
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      
    volumes:
      - .:/app
      - kmps_node_modules:/app/node_modules
    depends_on:
      - kompose-api
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:${KMPS_APP_PORT:-3100}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - kompose_network
    labels:
      # Traefik enabled/disabled per service
      - 'traefik.enable=${TRAEFIK_ENABLED_MANAGE:-false}'
      
      # HTTP to HTTPS redirect (only for production when PROTOCOL=https)
      - 'traefik.http.middlewares.${KMPS_COMPOSE_PROJECT_NAME}-redirect-web-secure.redirectscheme.scheme=${PROTOCOL}'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web.middlewares=${KMPS_COMPOSE_PROJECT_NAME}-redirect-web-secure'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web.rule=Host(`${SUBDOMAIN_MANAGE}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web.entrypoints=web'
      
      # Secure configuration with SSO middleware (HTTPS in production, HTTP in local)
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web-secure.rule=Host(`${SUBDOMAIN_MANAGE}${ROOT_DOMAIN:+.${ROOT_DOMAIN}}`)'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web-secure.tls.certresolver=${PROTOCOL:+resolver}'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web-secure.tls=${PROTOCOL:+true}'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web-secure.entrypoints=web-secure'
      - 'traefik.http.routers.${KMPS_COMPOSE_PROJECT_NAME}-web-secure.middlewares=sso-secure'
      
      # Load balancer configuration
      - 'traefik.http.services.${KMPS_COMPOSE_PROJECT_NAME}-web-secure.loadbalancer.server.port=${KMPS_APP_PORT:-3100}'
      - 'traefik.docker.network=${NETWORK_NAME}'

volumes:
  kmps_node_modules:
    name: ${KMPS_COMPOSE_PROJECT_NAME}_node_modules

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
