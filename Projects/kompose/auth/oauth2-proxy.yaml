# OAuth2 Proxy Service for SSO
# This extends the auth stack with forward authentication capabilities

services:
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: ${COMPOSE_PROJECT_NAME}_oauth2_proxy
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE:-Europe/Amsterdam}
      
      # OAuth2 Provider Configuration (Keycloak)
      OAUTH2_PROXY_PROVIDER: keycloak-oidc
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: "Kompose SSO"
      OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_CLIENT_ID:-kompose-sso}
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_CLIENT_SECRET}
      OAUTH2_PROXY_OIDC_ISSUER_URL: https://${TRAEFIK_HOST_AUTH}/realms/kompose
      OAUTH2_PROXY_REDIRECT_URL: https://${OAUTH2_PROXY_HOST}/oauth2/callback
      
      # Cookie Settings
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_COOKIE_SECRET}
      OAUTH2_PROXY_COOKIE_SECURE: "true"
      OAUTH2_PROXY_COOKIE_HTTPONLY: "true"
      OAUTH2_PROXY_COOKIE_SAMESITE: "lax"
      OAUTH2_PROXY_COOKIE_DOMAINS: ".${BASE_DOMAIN}"
      OAUTH2_PROXY_COOKIE_NAME: "_kompose_oauth2_proxy"
      OAUTH2_PROXY_COOKIE_EXPIRE: "168h" # 7 days
      OAUTH2_PROXY_COOKIE_REFRESH: "60m"
      
      # Session Settings
      OAUTH2_PROXY_SESSION_STORE_TYPE: redis
      OAUTH2_PROXY_REDIS_CONNECTION_URL: redis://core-redis:6379
      
      # Email Domain Restrictions (optional - adjust as needed)
      # OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      # OAUTH2_PROXY_AUTHENTICATED_EMAILS_FILE: /emails.txt
      
      # Upstream Settings
      OAUTH2_PROXY_UPSTREAMS: static://202
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      
      # Logging
      OAUTH2_PROXY_REQUEST_LOGGING: "true"
      OAUTH2_PROXY_AUTH_LOGGING: "true"
      OAUTH2_PROXY_STANDARD_LOGGING: "true"
      
      # Security
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "false"
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_PASS_USER_HEADERS: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: "true"
      
      # Scopes
      OAUTH2_PROXY_SCOPE: "openid profile email groups"
      
      # Whitelist specific paths (health checks, public endpoints)
      OAUTH2_PROXY_SKIP_AUTH_ROUTES: "^/health$,^/ping$,^/api/healthcheck$"
      
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4180/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - kompose_network
    depends_on:
      - keycloak
    labels:
      - 'traefik.enable=true'
      
      # HTTP to HTTPS redirect
      - 'traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-oauth2-redirect-web-secure.redirectscheme.scheme=https'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web.middlewares=${COMPOSE_PROJECT_NAME}-oauth2-redirect-web-secure'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web.rule=Host(`${OAUTH2_PROXY_HOST}`)'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web.entrypoints=web'
      
      # HTTPS configuration
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web-secure.rule=Host(`${OAUTH2_PROXY_HOST}`)'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web-secure.tls.certresolver=resolver'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web-secure.entrypoints=web-secure'
      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-oauth2-web-secure.middlewares=compression'
      - 'traefik.http.services.${COMPOSE_PROJECT_NAME}-oauth2-web-secure.loadbalancer.server.port=4180'
      - 'traefik.docker.network=${NETWORK_NAME:-kompose}'
      
      # Forward Auth Middleware Definition
      - 'traefik.http.middlewares.kompose-sso.forwardAuth.address=http://oauth2-proxy:4180/oauth2/auth'
      - 'traefik.http.middlewares.kompose-sso.forwardAuth.trustForwardHeader=true'
      - 'traefik.http.middlewares.kompose-sso.forwardAuth.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,X-Auth-Request-Groups'

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
