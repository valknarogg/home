name: data

services:
  redis:
    image: ${REDIS_IMAGE:-redis:latest}
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - kompose_network
    ports:
      - 6379:6379
    expose:
      - "6379"

  postgres:
    image: ${POSTGRES_IMAGE:-postgres:latest}
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    networks:
      - kompose_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8088:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - kompose_network
volumes:
  pgdata:
  pgadmin-data:

networks:
  kompose_network:
    name: ${NETWORK_NAME:-kompose}
    external: true
