server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs via Docker socket
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.project"]
    
    relabel_configs:
      # Container name
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      
      # Container ID (short)
      - source_labels: ['__meta_docker_container_id']
        regex: '(.{12})'
        target_label: 'container_id'
      
      # Compose project name
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'compose_project'
      
      # Compose service name
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'
      
      # Stack name (alternative label)
      - source_labels: ['__meta_docker_container_label_stack']
        target_label: 'stack'
      
      # Image name
      - source_labels: ['__meta_docker_container_label_com_docker_compose_image']
        target_label: 'image'
      
      # Network
      - source_labels: ['__meta_docker_container_network_mode']
        target_label: 'network'
      
      # Container state
      - source_labels: ['__meta_docker_container_label_com_docker_compose_container_number']
        target_label: 'container_number'
      
      # Host
      - replacement: 'kompose-host'
        target_label: 'host'
      
      # Job label
      - replacement: 'docker'
        target_label: 'job'
    
    pipeline_stages:
      # Parse JSON logs if available
      - json:
          expressions:
            level: level
            msg: message
            timestamp: time
      
      # Extract log level from common formats
      - regex:
          expression: '(?P<level>(DEBUG|INFO|WARN|WARNING|ERROR|FATAL|CRITICAL))'
      
      # Convert log level to lowercase
      - template:
          source: level
          template: '{{ ToLower .Value }}'
      
      # Set log level label
      - labels:
          level:
      
      # Add timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - "2006-01-02T15:04:05.000Z07:00"
            - "2006-01-02 15:04:05"
      
      # Output formatting
      - output:
          source: msg

  # System logs (optional - for host system logs)
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log
    
    pipeline_stages:
      - regex:
          expression: '(?P<level>(DEBUG|INFO|WARN|WARNING|ERROR|FATAL|CRITICAL))'
      - labels:
          level:
